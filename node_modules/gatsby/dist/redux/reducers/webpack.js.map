{"version":3,"sources":["../../../src/redux/reducers/webpack.js"],"names":["merge","require","module","exports","state","action","type","nextConfig","payload","entry","output","target","resolveLoaders"],"mappings":"AAAA,MAAMA,QAAQC,QAAS,eAAT,CAAd;;AAEAC,OAAOC,OAAP,GAAiB,CAACC,QAAQ,EAAT,EAAaC,MAAb,KAAwB;AACvC,UAAQA,OAAOC,IAAf;AACE,SAAM,oBAAN;AAA2B;AACzB,YAAIC,aAAaF,OAAOG,OAAxB;AACA,eAAOD,WAAWE,KAAlB;AACA,eAAOF,WAAWG,MAAlB;AACA,eAAOH,WAAWI,MAAlB;AACA,eAAOJ,WAAWK,cAAlB;AAEA,eAAOZ,MAAMI,KAAN,EAAaG,UAAb,CAAP;AACD;;AACD,SAAM,wBAAN;AACE,+BAAYF,OAAOG,OAAnB;;AAEF;AACE,aAAOJ,KAAP;AAdJ;AAgBD,CAjBD","file":"webpack.js","sourcesContent":["const merge = require(`webpack-merge`)\n\nmodule.exports = (state = {}, action) => {\n  switch (action.type) {\n    case `SET_WEBPACK_CONFIG`: {\n      let nextConfig = action.payload\n      delete nextConfig.entry\n      delete nextConfig.output\n      delete nextConfig.target\n      delete nextConfig.resolveLoaders\n\n      return merge(state, nextConfig)\n    }\n    case `REPLACE_WEBPACK_CONFIG`:\n      return { ...action.payload }\n\n    default:\n      return state\n  }\n}\n"]}