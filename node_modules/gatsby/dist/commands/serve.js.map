{"version":3,"sources":["../../src/commands/serve.js"],"names":["serve","require","signalExit","module","exports","program","port","open","directory","parseInt","server","code","signal","stop"],"mappings":"AAAA;AACA,MAAMA,QAAQC,QAAS,OAAT,CAAd;;AACA,MAAMC,aAAaD,QAAS,aAAT,CAAnB;;AAEAE,OAAOC,OAAP,GAAiBC,WAAW;AAAA,MACpBC,IADoB,GACMD,OADN,CACpBC,IADoB;AAAA,MACdC,IADc,GACMF,OADN,CACdE,IADc;AAAA,MACRC,SADQ,GACMH,OADN,CACRG,SADQ;AAE1BF,SAAO,OAAOA,IAAP,KAAiB,QAAjB,GAA2BG,SAASH,IAAT,EAAe,EAAf,CAA3B,GAAgDA,IAAvD;AAEA,MAAII,SAASV,MAAO,GAAEQ,SAAU,SAAnB,EAA6B;AAAEF,QAAF;AAAQC;AAAR,GAA7B,CAAb;AAEAL,aAAW,CAACS,IAAD,EAAOC,MAAP,KAAkB;AAC3BF,WAAOG,IAAP;AACD,GAFD;AAGD,CATD","file":"serve.js","sourcesContent":["/* @flow weak */\nconst serve = require(`serve`)\nconst signalExit = require(`signal-exit`)\n\nmodule.exports = program => {\n  let { port, open, directory } = program\n  port = typeof port === `string` ? parseInt(port, 10) : port\n\n  let server = serve(`${directory}/public`, { port, open })\n\n  signalExit((code, signal) => {\n    server.stop()\n  })\n}\n"]}