var _asyncToGenerator = require("@babel/runtime/helpers/asyncToGenerator");

const webpack = require(`webpack`);

const fs = require(`fs-extra`);

const glob = require(`glob`);

const webpackConfig = require(`../utils/webpack.config`);

module.exports =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(function* (program) {
    const directory = program.directory;
    const compilerConfig = yield webpackConfig(program, directory, `build-css`);
    return new Promise((resolve, reject) => {
      webpack(compilerConfig).run(err => {
        if (err) {
          reject(err);
        } // We don't want any javascript produced by this step in the process.


        try {
          fs.unlinkSync(`${directory}/public/bundle-for-css.js`);
          glob.sync(`${directory}/public/*bundle-for-css*`).map(bundlePath => fs.unlinkSync(bundlePath));
        } catch (e) {} // ignore.
        // Ensure there's a styles.css file in public so tools that expect it
        // can find it.


        fs.ensureFile(`${directory}/public/styles.css`, err => {
          resolve(err);
        });
      });
    });
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();
//# sourceMappingURL=build-css.js.map