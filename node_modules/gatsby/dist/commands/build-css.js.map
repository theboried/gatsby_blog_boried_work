{"version":3,"sources":["../../src/commands/build-css.js"],"names":["webpack","require","fs","glob","webpackConfig","module","exports","program","directory","compilerConfig","Promise","resolve","reject","run","err","unlinkSync","sync","map","bundlePath","e","ensureFile"],"mappings":";;AACA,MAAMA,UAAUC,QAAS,SAAT,CAAhB;;AACA,MAAMC,KAAKD,QAAS,UAAT,CAAX;;AACA,MAAME,OAAOF,QAAS,MAAT,CAAb;;AAEA,MAAMG,gBAAgBH,QAAS,yBAAT,CAAtB;;AAEAI,OAAOC,OAAP;AAAA;AAAA;AAAA,+BAAiB,WAAOC,OAAP,EAAwB;AAAA,UAC/BC,SAD+B,GACjBD,OADiB,CAC/BC,SAD+B;AAGvC,UAAMC,uBAAuBL,cAAcG,OAAd,EAAuBC,SAAvB,EAAmC,WAAnC,CAA7B;AAEA,WAAO,IAAIE,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCZ,cAAQS,cAAR,EAAwBI,GAAxB,CAA4BC,OAAO;AACjC,YAAIA,GAAJ,EAAS;AACPF,iBAAOE,GAAP;AACD,SAHgC,CAKjC;;;AACA,YAAI;AACFZ,aAAGa,UAAH,CAAe,GAAEP,SAAU,2BAA3B;AACAL,eACGa,IADH,CACS,GAAER,SAAU,0BADrB,EAEGS,GAFH,CAEOC,cAAchB,GAAGa,UAAH,CAAcG,UAAd,CAFrB;AAGD,SALD,CAKE,OAAOC,CAAP,EAAU,CAEX,CAFC,CACA;AAGF;AACA;;;AACAjB,WAAGkB,UAAH,CAAe,GAAEZ,SAAU,oBAA3B,EAAgDM,OAAO;AACrDH,kBAAQG,GAAR;AACD,SAFD;AAGD,OApBD;AAqBD,KAtBM,CAAP;AAuBD,GA5BD;;AAAA;AAAA;AAAA;AAAA","file":"build-css.js","sourcesContent":["/* @flow */\nconst webpack = require(`webpack`)\nconst fs = require(`fs-extra`)\nconst glob = require(`glob`)\n\nconst webpackConfig = require(`../utils/webpack.config`)\n\nmodule.exports = async (program: any) => {\n  const { directory } = program\n\n  const compilerConfig = await webpackConfig(program, directory, `build-css`)\n\n  return new Promise((resolve, reject) => {\n    webpack(compilerConfig).run(err => {\n      if (err) {\n        reject(err)\n      }\n\n      // We don't want any javascript produced by this step in the process.\n      try {\n        fs.unlinkSync(`${directory}/public/bundle-for-css.js`)\n        glob\n          .sync(`${directory}/public/*bundle-for-css*`)\n          .map(bundlePath => fs.unlinkSync(bundlePath))\n      } catch (e) {\n        // ignore.\n      }\n\n      // Ensure there's a styles.css file in public so tools that expect it\n      // can find it.\n      fs.ensureFile(`${directory}/public/styles.css`, err => {\n        resolve(err)\n      })\n    })\n  })\n}\n"]}