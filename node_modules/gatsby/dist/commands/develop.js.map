{"version":3,"sources":["../../src/commands/develop.js"],"names":["url","require","glob","fs","chokidar","express","graphqlHTTP","parsePath","request","rl","webpack","webpackConfig","bootstrap","store","copyStaticDirectory","developHtml","withBasePath","report","launchEditor","formatWebpackMessages","chalk","address","sourceNodes","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","exit","startServer","program","directory","directoryPath","createIndexHtml","catch","err","name","panic","stripIndent","devConfig","port","compiler","app","use","log","path","heartbeat","schema","getState","graphiql","req","res","next","header","post","enableRefresh","env","ENABLE_GATSBY_REFRESH_ENDPOINT","refreshToken","GATSBY_REFRESH_TOKEN","authorizedRefresh","headers","authorization","console","end","get","query","fileName","lineNumber","static","__dirname","logLevel","publicPath","stats","proxy","config","prefix","proxiedUrl","originalUrl","pipe","sendFile","decodeURIComponent","parsedPath","extname","startsWith","status","endsWith","server","Server","io","socket","join","listener","listen","host","code","watchGlobs","map","watch","to","emit","module","exports","detect","parseInt","Promise","resolve","_port","question","answer","length","match","then","c","l","prepareUrls","protocol","formatUrl","hostname","format","pathname","prettyPrintUrl","bold","isUnspecifiedHost","lanUrlForConfig","lanUrlForTerminal","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser","printInstructions","appName","urls","useYarn","cyan","printDeprecationWarnings","deprecatedApis","deprecatedLocations","forEach","api","sync","file","fileText","readFileSync","matchingApis","filter","indexOf","push","yellow","isFirstCompile","plugin","messages","toJson","isSuccessful","errors","warnings","sitePackageJson","open"],"mappings":"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","file":"develop.js","sourcesContent":["/* @flow */\n\nconst url = require(`url`)\nconst glob = require(`glob`)\nconst fs = require(`fs`)\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst parsePath = require(`parse-filepath`)\nconst request = require(`request`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store } = require(`../redux`)\nconst copyStaticDirectory = require(`../utils/copy-static-directory`)\nconst developHtml = require(`./develop-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst launchEditor = require(`react-dev-utils/launchEditor`)\nconst formatWebpackMessages = require(`react-dev-utils/formatWebpackMessages`)\nconst chalk = require(`chalk`)\nconst address = require(`address`)\nconst sourceNodes = require(`../utils/source-nodes`)\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfer with the regular\n// bootstrap.\nsetTimeout(() => {\n  copyStaticDirectory()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  process.exit()\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = () =>\n    developHtml(program).catch(err => {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://goo.gl/yL9lND\n        `,\n        err\n      )\n    })\n\n  // Start bootstrap process.\n  await bootstrap(program)\n\n  await createIndexHtml()\n\n  const devConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: false,\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n  app.use(\n    `/___graphql`,\n    graphqlHTTP({\n      schema: store.getState().schema,\n      graphiql: true,\n    })\n  )\n\n  // Allow requests from any origin. Avoids CORS issues when using the `--host` flag.\n  app.use((req, res, next) => {\n    res.header(`Access-Control-Allow-Origin`, `*`)\n    res.header(\n      `Access-Control-Allow-Headers`,\n      `Origin, X-Requested-With, Content-Type, Accept`\n    )\n    next()\n  })\n\n  /**\n   * Refresh external data sources.\n   * This behavior is disabled by default, but the ENABLE_REFRESH_ENDPOINT env var enables it\n   * If no GATSBY_REFRESH_TOKEN env var is available, then no Authorization header is required\n   **/\n  app.post(`/__refresh`, (req, res) => {\n    const enableRefresh = process.env.ENABLE_GATSBY_REFRESH_ENDPOINT\n    const refreshToken = process.env.GATSBY_REFRESH_TOKEN\n    const authorizedRefresh =\n      !refreshToken || req.headers.authorization === refreshToken\n\n    if (enableRefresh && authorizedRefresh) {\n      console.log(`Refreshing source data`)\n      sourceNodes()\n    }\n    res.end()\n  })\n\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  app.use(express.static(__dirname + `/public`))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      logLevel: `trace`,\n      publicPath: devConfig.output.publicPath,\n      stats: `errors-only`,\n    })\n  )\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      req.pipe(request(proxiedUrl)).pipe(res)\n    })\n  }\n\n  // Check if the file exists in the public folder.\n  app.get(`*`, (req, res, next) => {\n    // Load file but ignore errors.\n    res.sendFile(\n      directoryPath(`/public${decodeURIComponent(req.path)}`),\n      err => {\n        // No err so a file was sent successfully.\n        if (!err || !err.path) {\n          next()\n        } else if (err) {\n          // There was an error. Let's check if the error was because it\n          // couldn't find an HTML file. We ignore these as we want to serve\n          // all HTML from our single empty SSR html file.\n          const parsedPath = parsePath(err.path)\n          if (\n            parsedPath.extname === `` ||\n            parsedPath.extname.startsWith(`.html`)\n          ) {\n            next()\n          } else {\n            res.status(404).end()\n          }\n        }\n      }\n    )\n  })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    const parsedPath = parsePath(req.path)\n    if (\n      parsedPath.extname === `` ||\n      parsedPath.extname.startsWith(`.html`) ||\n      parsedPath.path.endsWith(`/`)\n    ) {\n      res.sendFile(directoryPath(`public/index.html`), err => {\n        if (err) {\n          res.status(500).end()\n        }\n      })\n    } else {\n      next()\n    }\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n\n  const server = require(`http`).Server(app)\n  const io = require(`socket.io`)(server)\n\n  io.on(`connection`, socket => {\n    socket.join(`clients`)\n  })\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${\n            program.port\n          } as there's already a process listing on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    directoryPath(path)\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    io.to(`clients`).emit(`reload`)\n  })\n\n  return [compiler, listener]\n}\n\nmodule.exports = async (program: any) => {\n  const detect = require(`detect-port`)\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  let compiler\n  await new Promise(resolve => {\n    detect(port, (err, _port) => {\n      if (err) {\n        report.panic(err)\n      }\n\n      if (port !== _port) {\n        // eslint-disable-next-line max-len\n        const question = `Something is already running at port ${port} \\nWould you like to run the app at another port instead? [Y/n] `\n\n        rlInterface.question(question, answer => {\n          if (answer.length === 0 || answer.match(/^yes|y$/i)) {\n            program.port = _port // eslint-disable-line no-param-reassign\n          }\n\n          startServer(program).then(([c, l]) => {\n            compiler = c\n            resolve()\n          })\n        })\n      } else {\n        startServer(program).then(([c, l]) => {\n          compiler = c\n          resolve()\n        })\n      }\n    })\n  })\n\n  function prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port,\n        pathname: `/`,\n      })\n    const prettyPrintUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port: chalk.bold(port),\n        pathname: `/`,\n      })\n\n    const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n    let lanUrlForConfig, lanUrlForTerminal\n    if (isUnspecifiedHost) {\n      try {\n        // This can only return an IPv4 address\n        lanUrlForConfig = address.ip()\n        if (lanUrlForConfig) {\n          // Check if the address is a private ip\n          // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n          if (\n            /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n              lanUrlForConfig\n            )\n          ) {\n            // Address is private, format it for later use\n            lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n          } else {\n            // Address is not private, so we will discard it\n            lanUrlForConfig = undefined\n          }\n        }\n      } catch (_e) {\n        // ignored\n      }\n    }\n    // TODO collect errors (GraphQL + Webpack) in Redux so we\n    // can clear terminal and print them out on every compile.\n    // Borrow pretty printing code from webpack plugin.\n    const localUrlForTerminal = prettyPrintUrl(host)\n    const localUrlForBrowser = formatUrl(host)\n    return {\n      lanUrlForConfig,\n      lanUrlForTerminal,\n      localUrlForTerminal,\n      localUrlForBrowser,\n    }\n  }\n\n  function printInstructions(appName, urls, useYarn) {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n\n    console.log()\n    console.log(\n      `View GraphiQL, an in-browser IDE, to explore your site's data and schema`\n    )\n    console.log()\n    console.log(`  ${urls.localUrlForTerminal}___graphql`)\n\n    console.log()\n    console.log(`Note that the development build is not optimized.`)\n    console.log(\n      `To create a production build, use ` + `${chalk.cyan(`gatsby build`)}`\n    )\n    console.log()\n  }\n\n  function printDeprecationWarnings() {\n    const deprecatedApis = [`boundActionCreators`, `pathContext`]\n    const deprecatedLocations = {}\n    deprecatedApis.forEach(api => (deprecatedLocations[api] = []))\n\n    glob.sync(`{,!(node_modules|public)/**/}*.js`).forEach(file => {\n      const fileText = fs.readFileSync(file)\n      const matchingApis = deprecatedApis.filter(\n        api => fileText.indexOf(api) !== -1\n      )\n      matchingApis.forEach(api => deprecatedLocations[api].push(file))\n    })\n\n    deprecatedApis.forEach(api => {\n      if (deprecatedLocations[api].length) {\n        console.log(\n          `${chalk.cyan(api)} ${chalk.yellow(\n            `is deprecated but was found in the following files:`\n          )}`\n        )\n        console.log()\n        deprecatedLocations[api].forEach(file => console.log(file))\n        console.log()\n      }\n    })\n  }\n\n  let isFirstCompile = true\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.plugin(`done`, stats => {\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    const messages = formatWebpackMessages(stats.toJson({}, true))\n    const urls = prepareUrls(`http`, program.host, program.port)\n    const isSuccessful = !messages.errors.length && !messages.warnings.length\n    // if (isSuccessful) {\n    // console.log(chalk.green(`Compiled successfully!`))\n    // }\n    // if (isSuccessful && (isInteractive || isFirstCompile)) {\n    if (isSuccessful && isFirstCompile) {\n      printInstructions(program.sitePackageJson.name, urls, program.useYarn)\n      printDeprecationWarnings()\n      if (program.open) {\n        require(`opn`)(urls.localUrlForBrowser)\n      }\n    }\n\n    isFirstCompile = false\n\n    // If errors exist, only show errors.\n    // if (messages.errors.length) {\n    // // Only keep the first error. Others are often indicative\n    // // of the same problem, but confuse the reader with noise.\n    // if (messages.errors.length > 1) {\n    // messages.errors.length = 1\n    // }\n    // console.log(chalk.red(\"Failed to compile.\\n\"))\n    // console.log(messages.errors.join(\"\\n\\n\"))\n    // return\n    // }\n\n    // Show warnings if no errors were found.\n    // if (messages.warnings.length) {\n    // console.log(chalk.yellow(\"Compiled with warnings.\\n\"))\n    // console.log(messages.warnings.join(\"\\n\\n\"))\n\n    // // Teach some ESLint tricks.\n    // console.log(\n    // \"\\nSearch for the \" +\n    // chalk.underline(chalk.yellow(\"keywords\")) +\n    // \" to learn more about each warning.\"\n    // )\n    // console.log(\n    // \"To ignore, add \" +\n    // chalk.cyan(\"// eslint-disable-next-line\") +\n    // \" to the line before.\\n\"\n    // )\n    // }\n  })\n}\n"]}