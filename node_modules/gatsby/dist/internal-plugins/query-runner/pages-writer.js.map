{"version":3,"sources":["../../../src/internal-plugins/query-runner/pages-writer.js"],"names":["_","require","fs","store","emitter","getLayoutById","layouts","id","find","l","writePages","bootstrapFinished","getState","program","pages","pagesData","reduce","mem","path","matchPath","componentChunkName","layout","jsonName","layoutOjb","machineId","layoutComponentChunkName","components","json","pageLayouts","forEach","p","push","component","Error","uniq","uniqBy","c","syncRequires","map","componentWrapperPath","join","j","directory","asyncRequires","writeAndMove","file","data","destination","tmp","Date","now","writeFile","then","move","overwrite","Promise","all","JSON","stringify","exports","oldPages","debouncedWritePages","debounce","isEqual","leading","on"],"mappings":"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","file":"pages-writer.js","sourcesContent":["const _ = require(`lodash`)\nconst fs = require(`fs-extra`)\n\nconst { store, emitter } = require(`../../redux/`)\nimport { generatePathChunkName } from \"../../utils/js-chunk-names\"\n\nimport { joinPath } from \"../../utils/path\"\n\nconst getLayoutById = layouts => id => layouts.find(l => l.id === id)\n\n// Write out pages information.\nconst writePages = async () => {\n  bootstrapFinished = true\n  let { program, pages, layouts } = store.getState()\n  // Write out pages.json\n  const pagesData = pages.reduce(\n    (mem, { path, matchPath, componentChunkName, layout, jsonName }) => {\n      const layoutOjb = getLayoutById(layouts)(layout)\n      return [\n        ...mem,\n        {\n          componentChunkName,\n          layout: layoutOjb ? layoutOjb.machineId : layout,\n          layoutComponentChunkName: layoutOjb && layoutOjb.componentChunkName,\n          jsonName,\n          path,\n          matchPath,\n        },\n      ]\n    },\n    []\n  )\n\n  // Get list of components, layouts, and json files.\n  let components = []\n  let json = []\n  let pageLayouts = []\n\n  pages.forEach(p => {\n    components.push({\n      componentChunkName: p.componentChunkName,\n      component: p.component,\n    })\n    if (p.layout) {\n      let layout = getLayoutById(layouts)(p.layout)\n\n      if (!layout) {\n        throw new Error(\n          `Could not find layout '${\n            p.layout\n          }'. Check if this file exists in 'src/layouts'.`\n        )\n      }\n\n      pageLayouts.push(layout)\n      json.push({\n        jsonName: layout.jsonName,\n      })\n    }\n    json.push({ path: p.path, jsonName: p.jsonName })\n  })\n\n  pageLayouts = _.uniq(pageLayouts)\n  components = _.uniqBy(components, c => c.componentChunkName)\n\n  // Create file with sync requires of layouts/components/json files.\n  let syncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n\\n`\n  syncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.machineId}\": preferDefault(require(\"${\n          l.componentWrapperPath\n        }\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": preferDefault(require(\"${joinPath(\n          c.component\n        )}\"))`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  syncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${j.jsonName}\": require(\"${joinPath(\n          program.directory,\n          `/.cache/json/`,\n          j.jsonName\n        )}\")`\n    )\n    .join(`,\\n`)}\n}`\n\n  // Create file with async requires of layouts/components/json files.\n  let asyncRequires = `// prefer default export if available\nconst preferDefault = m => m && m.default || m\n\\n`\n  asyncRequires += `exports.components = {\\n${components\n    .map(\n      c =>\n        `  \"${c.componentChunkName}\": require(\"gatsby-module-loader?name=${\n          c.componentChunkName\n        }!${joinPath(c.component)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.json = {\\n${json\n    .map(\n      j =>\n        `  \"${\n          j.jsonName\n        }\": require(\"gatsby-module-loader?name=${generatePathChunkName(\n          j.path\n        )}!${joinPath(program.directory, `/.cache/json/`, j.jsonName)}\")`\n    )\n    .join(`,\\n`)}\n}\\n\\n`\n  asyncRequires += `exports.layouts = {\\n${pageLayouts\n    .map(\n      l =>\n        `  \"${l.machineId}\": require(\"gatsby-module-loader?name=${\n          l.componentChunkName\n        }!${l.componentWrapperPath}\")`\n    )\n    .join(`,\\n`)}\n}`\n\n  const writeAndMove = (file, data) => {\n    const destination = joinPath(program.directory, `.cache`, file)\n    const tmp = `${destination}.${Date.now()}`\n    return fs\n      .writeFile(tmp, data)\n      .then(() => fs.move(tmp, destination, { overwrite: true }))\n  }\n\n  return await Promise.all([\n    writeAndMove(`pages.json`, JSON.stringify(pagesData, null, 4)),\n    writeAndMove(`sync-requires.js`, syncRequires),\n    writeAndMove(`async-requires.js`, asyncRequires),\n  ])\n}\n\nexports.writePages = writePages\n\nlet bootstrapFinished = false\nlet oldPages\nconst debouncedWritePages = _.debounce(\n  () => {\n    // Don't write pages again until bootstrap has finished.\n    if (bootstrapFinished && !_.isEqual(oldPages, store.getState().pages)) {\n      writePages()\n      oldPages = store.getState().pages\n    }\n  },\n  500,\n  { leading: true }\n)\nemitter.on(`CREATE_PAGE`, () => {\n  // Ignore CREATE_PAGE until bootstrap is finished\n  // as this is called many many times during bootstrap and\n  // we can ignore them until CREATE_PAGE_END is called.\n  //\n  // After bootstrap, we need to listen for this as stateful page\n  // creators e.g. the internal plugin \"component-page-creator\"\n  // calls createPage directly so CREATE_PAGE_END won't get fired.\n  if (bootstrapFinished) {\n    debouncedWritePages()\n  }\n})\n\nemitter.on(`CREATE_PAGE_END`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE`, () => {\n  debouncedWritePages()\n})\nemitter.on(`DELETE_PAGE_BY_PATH`, () => {\n  debouncedWritePages()\n})\n"]}