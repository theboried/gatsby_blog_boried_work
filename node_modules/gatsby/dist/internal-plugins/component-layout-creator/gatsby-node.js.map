{"version":3,"sources":["../../../src/internal-plugins/component-layout-creator/gatsby-node.js"],"names":["globCB","require","Promise","_","chokidar","systemPath","glob","promisify","validatePath","exports","createLayouts","store","actions","options","doneCb","createLayout","deleteLayout","program","getState","exts","extensions","map","e","slice","join","layoutDirectory","posix","directory","layoutGlob","files","forEach","file","_createLayout","watch","on","path","includes","push","layouts","filter","p","component","layout","name","f","filePath","relative"],"mappings":";;AAAA,MAAMA,SAASC,QAAS,MAAT,CAAf;;AACA,MAAMC,UAAUD,QAAS,UAAT,CAAhB;;AACA,MAAME,IAAIF,QAAS,QAAT,CAAV;;AACA,MAAMG,WAAWH,QAAS,UAAT,CAAjB;;AACA,MAAMI,aAAaJ,QAAS,MAAT,CAAnB;;AAEA,MAAMK,OAAOJ,QAAQK,SAAR,CAAkBP,MAAlB,CAAb;;AAEA,MAAMQ,eAAeP,QAAS,iBAAT,CAArB,C,CAEA;AACA;AACA;AACA;;;AACAQ,QAAQC,aAAR;AAAA;AAAA;AAAA,+BAAwB,WAAO;AAAEC,SAAF;AAASC;AAAT,GAAP,EAA2BC,OAA3B,EAAoCC,MAApC,EAA+C;AAAA,UAC7DC,YAD6D,GAC9BH,OAD8B,CAC7DG,YAD6D;AAAA,UAC/CC,YAD+C,GAC9BJ,OAD8B,CAC/CI,YAD+C;AAErE,UAAMC,UAAUN,MAAMO,QAAN,GAAiBD,OAAjC;AACA,UAAME,OAAOF,QAAQG,UAAR,CAAmBC,GAAnB,CAAuBC,KAAM,GAAEA,EAAEC,KAAF,CAAQ,CAAR,CAAW,EAA1C,EAA6CC,IAA7C,CAAmD,GAAnD,CAAb;AACA,UAAMC,kBAAkBpB,WAAWqB,KAAX,CAAiBF,IAAjB,CACtBP,QAAQU,SADc,EAErB,cAFqB,CAAxB;AAIA,UAAMC,aAAc,GAAEH,eAAgB,UAASN,IAAK,GAApD,CARqE,CAUrE;;AACA,QAAIU,cAAcvB,KAAKsB,UAAL,CAAlB;AACAC,UAAMC,OAAN,CAAcC,QAAQC,cAAcD,IAAd,EAAoBN,eAApB,EAAqCV,YAArC,CAAtB,EAZqE,CAcrE;;AACAX,aACG6B,KADH,CACSL,UADT,EAEGM,EAFH,CAEO,KAFP,EAEaC,QAAQ;AACjB,UAAI,CAAChC,EAAEiC,QAAF,CAAWP,KAAX,EAAkBM,IAAlB,CAAL,EAA8B;AAC5BH,sBAAcG,IAAd,EAAoBV,eAApB,EAAqCV,YAArC;;AACAc,cAAMQ,IAAN,CAAWF,IAAX;AACD;AACF,KAPH,EAQGD,EARH,CAQO,QARP,EAQgBC,QAAQ;AACpB;AACAxB,YACGO,QADH,GAEGoB,OAFH,CAEWC,MAFX,CAEkBC,KAAKA,EAAEC,SAAF,KAAgBN,IAFvC,EAGGL,OAHH,CAGWY,UAAU;AACjB1B,qBAAa;AAAE2B,gBAAMD,OAAOC;AAAf,SAAb;AACAd,gBAAQA,MAAMU,MAAN,CAAaK,KAAKA,MAAMF,OAAOC,IAA/B,CAAR;AACD,OANH;AAOD,KAjBH,EAkBGT,EAlBH,CAkBO,OAlBP,EAkBe,MAAMpB,QAlBrB;AAmBD,GAlCD;;AAAA;AAAA;AAAA;AAAA;;AAmCA,MAAMkB,gBAAgB,CAACa,QAAD,EAAWpB,eAAX,EAA4BV,YAA5B,KAA6C;AACjE;AACA;AACA,MAAI,CAACP,aAAaH,WAAWqB,KAAX,CAAiBoB,QAAjB,CAA0BrB,eAA1B,EAA2CoB,QAA3C,CAAb,CAAL,EAAyE;AACvE;AACD,GALgE,CAOjE;;;AACA,QAAMH,SAAS;AACbD,eAAWI,QADE,CAIf;;AAJe,GAAf;AAKA9B,eAAa2B,MAAb;AACD,CAdD","file":"gatsby-node.js","sourcesContent":["const globCB = require(`glob`)\nconst Promise = require(`bluebird`)\nconst _ = require(`lodash`)\nconst chokidar = require(`chokidar`)\nconst systemPath = require(`path`)\n\nconst glob = Promise.promisify(globCB)\n\nconst validatePath = require(`./validate-path`)\n\n// Path creator.\n// Auto-create layouts.\n// algorithm is glob /layouts directory for js/jsx/cjsx files *not*\n// underscored\nexports.createLayouts = async ({ store, actions }, options, doneCb) => {\n  const { createLayout, deleteLayout } = actions\n  const program = store.getState().program\n  const exts = program.extensions.map(e => `${e.slice(1)}`).join(`,`)\n  const layoutDirectory = systemPath.posix.join(\n    program.directory,\n    `/src/layouts`\n  )\n  const layoutGlob = `${layoutDirectory}/**/*.{${exts}}`\n\n  // Get initial list of files.\n  let files = await glob(layoutGlob)\n  files.forEach(file => _createLayout(file, layoutDirectory, createLayout))\n\n  // Listen for new layouts to be added or removed.\n  chokidar\n    .watch(layoutGlob)\n    .on(`add`, path => {\n      if (!_.includes(files, path)) {\n        _createLayout(path, layoutDirectory, createLayout)\n        files.push(path)\n      }\n    })\n    .on(`unlink`, path => {\n      // Delete the layout for the now deleted component.\n      store\n        .getState()\n        .layouts.filter(p => p.component === path)\n        .forEach(layout => {\n          deleteLayout({ name: layout.name })\n          files = files.filter(f => f !== layout.name)\n        })\n    })\n    .on(`ready`, () => doneCb())\n}\nconst _createLayout = (filePath, layoutDirectory, createLayout) => {\n  // Filter out special components that shouldn't be made into\n  // layouts.\n  if (!validatePath(systemPath.posix.relative(layoutDirectory, filePath))) {\n    return\n  }\n\n  // Create layout object\n  const layout = {\n    component: filePath,\n  }\n\n  // Add layout\n  createLayout(layout)\n}\n"]}